openapi: 3.0.3
info:
  version: 1.0.0
  title: Plastep work instructions API-spec

security:
  - bearerAuth: []

paths:
  /v1/system/ping:
    get:
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/workSets:
    get:
      operationId: listWorkSets
      summary: Lists work sets.
      description: Lists work sets.
      tags:
        - WorkSets
      parameters:
        - name: page
          in: query
          description: Page number. Defaults to 0
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size. Defaults to 10
          schema:
            type: integer
      responses:
        "200":
          description: List of work sets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkSet"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of work sets with given filters.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createWorkSet
      summary: Create a work set.
      description: Creates a new work set.
      tags:
        - WorkSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkSet"
        description: Payload
        required: true
      responses:
        "200":
          description: Created WorkSet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkSet"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/workSets/{workSetId}:
    get:
      operationId: findWorkSet
      summary: Find a work set.
      description: Finds a work set by id.
      tags:
        - WorkSets
      parameters:
        - name: workSetId
          required: true
          in: path
          description: work set id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: WorkSet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkSet"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateWorkSet
      summary: Update a work set.
      description: Updates a work set
      tags:
        - WorkSets
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkSet"
        description: Payload
        required: true
      parameters:
        - name: workSetId
          required: true
          in: path
          description: work set id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated WorkSet
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkSet"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteWorkSet
      summary: Delete a work set.
      description: Deletes a work set.
      tags:
        - WorkSets
      parameters:
        - name: workSetId
          required: true
          in: path
          description: work set id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/items:
    get:
      operationId: listItems
      summary: Lists items.
      description: Lists items.
      tags:
        - Items
      parameters:
        - name: page
          in: query
          description: Page number. Defaults to 0
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size. Defaults to 10
          schema:
            type: integer
        - name: workSetId
          in: query
          description: Filter by workSetId
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of items with given filters.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createItem
      summary: Create a item.
      description: Creates a new item.
      tags:
        - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/items/{itemId}:
    get:
      operationId: findItem
      summary: Find a item.
      description: Finds a item by id.
      tags:
        - Items
      parameters:
        - name: itemId
          required: true
          in: path
          description: item id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateItem
      summary: Update a item.
      description: Updates a item
      tags:
        - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
        description: Payload
        required: true
      parameters:
        - name: itemId
          required: true
          in: path
          description: item id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Updated Item
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteItem
      summary: Delete a item.
      description: Deletes a item.
      tags:
        - Items
      parameters:
        - name: itemId
          required: true
          in: path
          description: item id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/instructions:
    get:
      operationId: listInstructions
      summary: Lists instructions.
      description: Lists instructions.
      tags:
        - Instructions
      parameters:
        - name: page
          in: query
          description: Page number. Defaults to 0
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size. Defaults to 10
          schema:
            type: integer
        - name: itemId
          in: query
          description: Filter by item id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of instructions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Instruction"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of instructions with given filters.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createInstruction
      summary: Create a instruction.
      description: Creates a new instruction.
      tags:
        - Instructions
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instruction"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Instruction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Instruction"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/instructions/{instructionId}:
    get:
      operationId: findInstruction
      summary: Find a instruction.
      description: Finds a instruction by id.
      tags:
        - Instructions
      parameters:
        - name: instructionId
          required: true
          in: path
          description: instruction id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Instruction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Instruction"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateInstruction
      summary: Update a instruction.
      description: Updates a instruction
      tags:
        - Instructions
      parameters:
        - name: instructionId
          required: true
          in: path
          description: instruction id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Instruction"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated Instruction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Instruction"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteInstruction
      summary: Delete a instruction.
      description: Deletes a instruction.
      tags:
        - Instructions
      parameters:
        - name: instructionId
          required: true
          in: path
          description: instruction id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/instructions/{instructionId}/phases:
    get:
      operationId: listPhases
      summary: Lists phases.
      description: Lists phases.
      tags:
        - Phases
      parameters:
        - name: page
          in: query
          description: Page number. Defaults to 0
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Page size. Defaults to 10
          schema:
            type: integer
        - name: instructionId
          required: true
          in: path
          description: Instruction ID
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of phases
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Phase"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of phases with given filters.
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createPhase
      summary: Create a phase.
      description: Creates a new phase.
      tags:
        - Phases
      parameters:
        - name: instructionId
          required: true
          in: path
          description: Instruction ID
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Phase"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Phase
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Phase"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/instructions/{instructionId}/phases/{phaseId}:
    get:
      operationId: findPhase
      summary: Find a phase.
      description: Finds a phase by id.
      tags:
        - Phases
      parameters:
        - name: instructionId
          required: true
          in: path
          description: Instruction ID
          schema:
            type: string
            format: uuid
        - name: phaseId
          required: true
          in: path
          description: phase id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Phase
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Phase"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updatePhase
      summary: Update a phase.
      description: Updates a phase
      tags:
        - Phases
      parameters:
        - name: instructionId
          required: true
          in: path
          description: Instruction ID
          schema:
            type: string
            format: uuid
        - name: phaseId
          required: true
          in: path
          description: phase id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Phase"
        description: Payload
        required: true
      responses:
        "200":
          description: Updated Phase
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Phase"
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deletePhase
      summary: Delete a phase.
      description: Deletes a phase.
      tags:
        - Phases
      parameters:
        - name: instructionId
          required: true
          in: path
          description: Instruction ID
          schema:
            type: string
            format: uuid
        - name: phaseId
          required: true
          in: path
          description: phase id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: Success
        "default":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Metadata:
      type: object
      description: Metadata object
      properties:
        creatorId:
          type: string
          format: uuid
          description: ID of creator
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: Created date
          readOnly: true
        lastModifierId:
          type: string
          format: uuid
          description: Id of last modifier
          readOnly: true
        modifiedAt:
          type: string
          format: date-time
          description: Date modified
          readOnly: true

    WorkSet:
      type: object
      description: WorkSet object. WorkSet describes a single place where one or more phases are done.
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Work set id in UUID format
        name:
          type: string
          description: Work set name
        metadata:
          $ref: "#/components/schemas/Metadata"

    Item:
      type: object
      description: Item object. Item describes single item/product that is produced
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Product id in UUID format
        name:
          type: string
          description: Item of the item
        metadata:
          $ref: "#/components/schemas/Metadata"

    Instruction:
      type: object
      description: Instruction object
      required:
        - productId
        - responsiblePersons
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Instruction id in UUID format
        productId:
          type: string
          format: uuid
        responsiblePersons:
          type: array
          items:
            type: string
            format: email
          description: List of emails where notifications related to modifications and suggestions should be sent. Must contain at least one email address.
        revision:
          type: number
          format: int32
          description: Revision
        revisionApprovedDate:
          type: string
          format: date-time
          description: Date time when current revision was approved
        metadata:
          $ref: "#/components/schemas/Metadata"

    Phase:
      type: object
      description: Phase object. Describes single phase within instruction. Phase should always be linked to single instruction and work set.
      required:
        - name
        - instructionId
        - workSetId
        - instructionText
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Phase id in UUID format
        instructionId:
          type: string
          format: uuid
          description: Instruction id in UUID format
        workSetId:
          type: string
          format: uuid
          description: WorkSet id in UUID format
        instructionText:
          type: string
          description: Detailed instruction text for this phase
        name:
          type: string
          description: Phase name
        media:
          type: array
          items:
            type: string
            format: URI
          description: List of media URIs
        metadata:
          $ref: "#/components/schemas/Metadata"